(self.webpackChunkmaplestory_reverse=self.webpackChunkmaplestory_reverse||[]).push([[239],{239:(e,t,s)=>{"use strict";s.r(t);const o=Symbol("empty"),r=Symbol("slime"),n=Symbol("bean"),i=Symbol("hole"),a=[{dr:-1,dc:-1},{dr:-1,dc:0},{dr:-1,dc:1},{dr:0,dc:-1},{dr:0,dc:1},{dr:1,dc:-1},{dr:1,dc:0},{dr:1,dc:1}];var l=s(832);const c=l.aN.shared.resources.assets.spritesheet,d={empty:[l.xE.EMPTY],slime:[c.textures.slime],bean:[c.textures.bean],hole:[c.textures.hole],guide:(h=c.animations.guide,210,h.map((e=>({texture:e,time:210}))))};var h;class p extends l.Kg{constructor(){super(d.empty),this.updateAnchor=!0,this.loop=!1,this.hitArea=new l.Ae(0,0,40,40)}set(e){switch(this.loop=!1,e){case o:this.textures=d.empty;break;case r:this.textures=d.slime;break;case n:this.textures=d.bean;break;case i:this.textures=d.hole}}guide(){this.textures=d.guide,this.loop=!0,this.play()}}const m=[{description:"human",move:async({events:e})=>new Promise((t=>e.addEventListener("move",(e=>t(e.detail)),{once:!0})))},{description:"random",move:async({moves:e})=>e[Math.floor(Math.random()*e.length)]}],u=new class{constructor(){this.reset()}get(e,t){if(0<=e&&e<8&&0<=t&&t<8)return this.arr[8*e+t]}set(e,t,s){this.arr[8*e+t]=s}board(){const e=[...new Array(8)].map((()=>new Array(8)));for(let t=0;t<8;t++)for(let s=0;s<8;s++)e[t][s]=this.get(t,s);return e}moves(){const e=[];for(let t=0;t<8;t++)for(let s=0;s<8;s++)this.valid({row:t,col:s})&&e.push({row:t,col:s});return e}move(e){const t=[];if(void 0!==e){t.push(...this.flipped(e)),this.set(e.row,e.col,this.player);for(const{row:e,col:s}of t)this.set(e,s,this.player)}return[this.player,this.opponent]=[this.opponent,this.player],t}valid(e){return void 0!==e&&this.get(e.row,e.col)===o&&this.flipped(e).length>0}flipped(e){const t=[];for(const{dr:s,dc:o}of a){const r=[];let n=e.row+s,i=e.col+o;for(;this.get(n,i)===this.opponent;)r.push({row:n,col:i}),n+=s,i+=o;r.length>0&&this.get(n,i)===this.player&&t.push(...r)}return t}reset(){this.arr=new Array(64).fill(o),this.set(3,4,r),this.set(4,3,r),this.set(3,3,n),this.set(4,4,n),this.player=r,this.opponent=n}},f=new class{constructor(e){this.tiles=[...new Array(8)].map((()=>new Array(8))),this.events=new EventTarget,this.app=new l.Mx({width:334,height:335,view:e,transparent:!0}),this.app.stage.addChild(new l.jy(c.textures.background));const t=new l.W2;t.position.set(7,8);for(let e=0;e<8;e++)for(let s=0;s<8;s++){const o=new p(c);o.position.set(40*s,40*e),o.interactive=!0,o.on("pointertap",(()=>{const t=new CustomEvent("move",{detail:{row:e,col:s}});this.events.dispatchEvent(t)})),this.tiles[e][s]=o,t.addChild(o)}this.app.stage.addChild(t)}}(document.getElementById("board")),w=document.getElementById("start"),v=document.getElementById("slime"),y=document.getElementById("bean"),g=document.getElementById("info");let b=!1;function x(){b=w.disabled=v.disabled=y.disabled=!1,g.textContent="Click on empty tiles to toggle holes.",u.reset();for(let e=0;e<8;e++)for(let t=0;t<8;t++)f.tiles[e][t].set(u.get(e,t))}function k(e){switch(e){case r:return"Slime";case n:return"PinkBean"}}function E(e){for(const t of m){const s=document.createElement("option");s.text=t.description,e.add(s)}}E(v),E(y),x(),f.events.addEventListener("move",(function(e){const{row:t,col:s}=e.detail;if(b)u.valid({row:t,col:s})||e.stopImmediatePropagation();else switch(u.get(t,s)){case o:u.set(t,s,i),f.tiles[t][s].set(i);break;case i:u.set(t,s,o),f.tiles[t][s].set(o)}})),w.onclick=async function(){if(b)return;b=w.disabled=v.disabled=y.disabled=!0;const e=m[v.selectedIndex],t=m[y.selectedIndex];for(;;){const s=u.player===r?e:t;g.textContent=`${k(u.player)}'s turn.`;let n=u.moves();if(0===n.length){if(u.move(),n=u.moves(),!(n.length>0)){g.textContent="Game over!";break}g.textContent=`Turn skipped. ${k(u.player)}'s turn`}for(const{row:e,col:t}of n)f.tiles[e][t].guide();const i=u.player,a=await s.move({moves:n,board:u.board(),events:f.events});if(!u.valid(a))throw new Error(`${k(u.player)} played an invalid move: ${JSON.stringify(a)}`);const l=u.move(a);for(const{row:e,col:t}of n)f.tiles[e][t].set(o);f.tiles[a.row][a.col].set(i);for(const{row:e,col:t}of l)f.tiles[e][t].set(i)}await async function(e){return new Promise((e=>setTimeout(e,1e3)))}(),x()}}}]);